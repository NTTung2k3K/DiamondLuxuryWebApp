@using System.Text.RegularExpressions
@using DiamondLuxurySolution.ViewModel.Models.News
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
@functions {
	// Hàm helper để loại bỏ các thẻ HTML từ chuỗi và cắt ngắn nếu quá dài
	public string StripHtml(string input, int maxLength)
	{
		// Remove HTML tags
		string plainText = Regex.Replace(input, "<.*?>", string.Empty);

		// Truncate if longer than maxLength
		if (plainText.Length > maxLength)
		{
			plainText = plainText.Substring(0, maxLength) + "...";
		}

		return plainText;
	}
}
@model List<NewsVm>
@if(Model!=null){
	var initialNew = Model.Where(p => p.Status).Take(3).ToList();
	var hiddenNew = Model.Where(p => p.Status).Skip(3).ToList();
<div class="slider-area">
	<div>
		<style>
			.whiteBox {
				border-radius: 3%;
				width: 50rem; /* Độ rộng của ô màu trắng */
				height: 52rem; /* Chiều cao của ô màu trắng */
				background-color: #ffffff; /* Màu nền là màu trắng */
				position: absolute;
				right: 13%; /* Canh chỉnh ô màu trắng vào giữa theo chiều ngang */
				transform: translateX(50%); /* Dịch chuyển ô màu trắng về phía phải */
				top: 64%; /* Đẩy lên trên 50% của .background-image-container */
				transform: translateY(-50%); /* Dịch chuyển lên trên 50% của chính nó */
				padding: 20px; /* Thêm padding để đỡ méo */
				display: flex; /* Sử dụng flexbox để căn giữa nội dung */
				justify-content: center; /* Căn giữa theo chiều ngang */
				align-items: center; /* Căn giữa theo chiều dọc */
			}

				.whiteBox p, h1 {
					color: black;
					margin-left: 2rem;
					margin-bottom: 5px;
				}

				.whiteBox button {
					display: block;
					margin: 10px auto; /* Adjust margin as needed */
				}

				.whiteBox h2,span.tintuc {
					color: black;
					background-color: #fde7a2; /* Màu nền cho "Tin Tức" */
					padding: 5px; /* Thêm padding để "Tin Tức" không bị dính vào border */
					border: 2px solid #000000; /* Đường viền cho "Tin Tức" */
					margin-top: 25px;
					margin-left: 2.6rem;
					margin-bottom: 15px;
					display: inline-block;
					text-align: center;
					width: 13rem;
				}

			.content-container {
				height: 101%;
				width: 100%; /* Đảm bảo nội dung căn giữa */
				max-width: 47rem; /* Giới hạn độ rộng tối đa của nội dung */
				border: 2px solid rgba(0, 0, 0, 0.15); /* Đường viền cho phần nội dung */
				padding: 10px; /* Đệm để giữ khoảng cách với nội dung */
				text-align: left;
			}

			.image-container {
				margin-right: 15px; /* Để chú thích về khoảng cách */
			}

			.xemThem {
				background-color: #A8741A; /* Đặt lại màu nền ban đầu của button */
				border: none; /* Xóa đường viền */
				color: white; /* Màu chữ */
				padding: 8px 16px; /* Đệm */
				text-align: center; /* Căn giữa chữ */
				text-decoration: none; /* Xóa gạch chân (nếu có) */
				display: inline-block; /* Hiển thị như khối trên cùng một hàng */
				font-size: 16px; /* Kích thước chữ */
				cursor: pointer; /* Con trỏ chuột thành hình bàn tay */
				transition-duration: 0.4s; /* Thời gian chuyển tiếp */
				border-radius: 0%;
			}

				.xemThem:hover {
					background-color: black; /* Đổi màu nền khi di chuột vào */
					color: white; /* Đổi màu chữ khi di chuột vào */
				}

			.selected {
				color: red; /* Màu chữ khi được chọn */
			}

			.news-menu a {
				padding-bottom: 5px; /* Thêm khoảng cách giữa văn bản và đường viền */
				border-bottom: 3px solid transparent; /* Đặt đường viền ban đầu trong suốt */
				color: white; /* Màu chữ mặc định */
				transition: border-color 0.3s ease-in-out; /* Hiệu ứng chuyển đổi màu sắc */
			}

			.news-menu ul {
				display: flex; /* Hiển thị các mục dưới dạng một dòng */
				align-items: center; /* Căn giữa các mục theo chiều dọc */
			}

			.news-menu a.selected, .news-menu a:hover {
				border-color: white; /* Đường viền màu đỏ khi được chọn hoặc di chuột vào */
			}

			.newsWidget__img {
				display: flex;
			}

			#seeMoreBtn {
				background-color: transparent;
				border: 1px solid white;
				color: white;
				cursor: pointer;
				border-radius: 10px;
				transition: all 0.3s ease;
			}

				#seeMoreBtn:hover {
					background-color: #a8741a;
					color: #ffffff;
				}
			.hidden {
				display: none !important;
			}
		</style>
		<div class="single-slider content-v-center"
			 style="background-image: url(https://file.hstatic.net/1000381168/file/tin_tuc_49c09cc3641e45ec8ef3a99be0693dd0.png); background-size:cover; height:63rem;">
		</div>
			@foreach (var news in Model.OrderByDescending(n => n.DateCreated).Take(1))
			{
				if (news.Status)
				{


					<div class="container">
						<div class="row">
							<div class="whiteBox">
								<div class="content-container">
									<h2 class="tintuc">Tin Tức</h2>
									<h1 style="display: flex; align-items: flex-start; word-break: break-all;">
										<img href="/Promotion/Detail?id=@news.NewsId" src="@news.Image" alt="Small Image" width="150" height="150" style="margin-right: 10px;">
										<span href="/Promotion/Detail?id=@news.NewsId" style="max-width:247px">@Html.Raw(StripHtml(news.NewName, 100))</span>
									</h1>
									<h5 style="word-break: break-all;">
										<p href="/Promotion/Detail?id=@news.NewsId">@Html.Raw(StripHtml(news.Description, 100))</p>
									</h5>

									<button href="/Promotion/Detail?id=@news.NewsId" class="xemThem" style="margin-left:2rem">Xem Thêm</button>
								</div>

							</div>
						</div>
					</div>

				}
			}

			<!-- Navigation Menu -->
			<!-- Main Content Area -->
			<div >
			<div class="container-news" style="padding: 16px 0 38px 180px ">
				<!-- Left Section: All News -->
				<div>
					<nav class="news-menu" style="">
						<ul style="list-style: none; padding: 0; display: flex; gap: 20px;">
							<li>
								<h2><a href="javascript:void(0);" id="all-news-link" onclick="showAllNews()" class="news-menu selected">Tất Cả Tin Tức</a></h2>
							</li>
							<li>
								<h2><a href="javascript:void(0);" id="latest-news-link" onclick="showLatestNews()" class="news-menu">Tin Tức Mới Nhất</a></h2>
							</li>
						</ul>
					</nav>
				</div>
				<div id="all-news" class="row" style="overflow: hidden; align-content: start">
					@if (Model != null && Model.Count() > 0)
					{

						<div class="col-lg-8" >
								@foreach (var news in initialNew)
								{
									<div class="newsWidget__item col-md-12" style="display: flex; align-items: center; max-height: 100%; width: 100%; position: relative; margin-top: 40px; padding: 0px; text-align: left; border-bottom: 1px solid rgba(255, 255, 255, 0.5); padding-bottom:20px">
										<div class="newsWidget__img col-md-4" style="max-width: 300px; max-height: 300px; padding: 0px;">
											<span style="position: absolute; bottom: 20px; background-color: #fde7a2; color: black;">Tin tức</span>
											<a href="/News/Detail?id=@news.NewsId" style="max-width: 100%; max-height: 100%;">
												<img href="/News/Detail?id=@news.NewsId" style="max-width: 100%; max-height: 100%;" src="@news.Image" alt="images">
											</a>
										</div>
										<div class="newsWidget__content col-md-8" style="margin-left: 20px; padding: 0px;">
											<a href="/News/Detail?id=@news.NewsId">
												<p style="white-space: normal; word-break: break-all; font-size: 4rem; margin-top: 20px; margin-bottom: 20px;">
													@Html.Raw(StripHtml(news.NewName, 20))
												</p>
											</a>
											<a href="/News/Detail?id=@news.NewsId">
												<h2 style="white-space: normal; word-break: break-all; padding: 0; margin-top: 20px; margin-bottom: 20px;" class="desc-article">
													@Html.Raw(StripHtml(news.Description, 50))
												</h2>
											</a>
											<span style="margin-top: 20px; margin-bottom: 20px;">@news.DateModified</span>
											
										</div>

									</div>

									
								}

								@foreach (var news in hiddenNew)
								{
									<div id="seeMore" class="newsWidget__item col-md-12 hidden" style="display: flex; align-items: center; max-height: 100%; width: 100%; position: relative; margin-top: 40px; padding: 0px; text-align: left; border-bottom: 1px solid rgba(255, 255, 255, 0.5); padding-bottom:20px">
										<div class="newsWidget__img col-md-4" style="max-width: 300px; max-height: 300px; padding: 0px">
											<span style="position: absolute; bottom: 20px;background-color: #fde7a2;color: black;">Tin tức</span>
											<a href="/News/Detail?id=@news.NewsId" style="max-width: 100%; max-height: 100%">
												<img href="/News/Detail?id=@news.NewsId" style=" max-width: 100%; max-height: 100%;" src="@news.Image" alt="images">
											</a>
										</div>
										<div class="newsWidget__content col-md-8" style="margin-left: 20px; padding: 0px;">
											<a href="/News/Detail?id=@news.NewsId">
												<p style="white-space: normal; word-break: break-all; font-size: 4rem; margin-top: 20px; margin-bottom: 20px;">
													@Html.Raw(StripHtml(news.NewName, 20))
												</p>
											</a>
											<a href="/News/Detail?id=@news.NewsId">
												<h2 style="white-space: normal; word-break: break-all; padding: 0; margin-top: 20px; margin-bottom: 20px;" class="desc-article">
													@Html.Raw(StripHtml(news.Description, 50))
												</h2>
											</a>
											<span style="margin-top: 20px; margin-bottom: 20px;">@news.DateModified</span>
										</div>

									</div>
								}
						</div>
						<div class="col-lg-4">
							@await Component.InvokeAsync("PromotionInNews")
						</div>
					}
					else
					{
						<p>Không có tin tức</p>
					}
				</div>

				<div id="latest-news" class="row" style="display: none;">

						@if (Model != null && Model.Count() > 0)
						{

							<div class="col-lg-8" >
								@foreach (var news in Model.OrderByDescending(n => n.DateModified).Take(5))
								{
									<div class="newsWidget__item col-md-12" style="display: flex; align-items: center; max-height: 100%; width: 100%; position: relative; margin-top: 40px; padding: 0px; text-align: left; border-bottom: 1px solid rgba(255, 255, 255, 0.5); padding-bottom:20px">
									<div class="newsWidget__img col-md-4" style="max-width: 300px; max-height: 300px; padding: 0px">
										<span style="position: absolute; bottom: 20px;background-color: #fde7a2;color: black;">Tin tức</span>
										<a href="/News/Detail?id=@news.NewsId" style="max-width: 100%; max-height: 100%">
											<img href="/News/Detail?id=@news.NewsId" style=" max-width: 100%; max-height: 100%;" src="@news.Image" alt="images">
										</a>
									</div>
									<div class="newsWidget__content col-md-8" style="margin-left: 20px; padding: 0px;">
										<a href="/News/Detail?id=@news.NewsId">
											<p style="white-space: normal; word-break: break-all; font-size: 4rem; margin-top: 20px; margin-bottom: 20px;">
												@Html.Raw(StripHtml(news.NewName, 20))
											</p>
										</a>
										<a href="/News/Detail?id=@news.NewsId">
											<h2 style="white-space: normal; word-break: break-all; padding: 0; margin-top: 20px; margin-bottom: 20px;" class="desc-article">
												@Html.Raw(StripHtml(news.Description, 50))
											</h2>
										</a>
										<span style="margin-top: 20px; margin-bottom: 20px;">@news.DateModified</span>
									</div>

								</div>
							}
						</div>
							<div class="col-lg-4">
								@await Component.InvokeAsync("PromotionInNews")
							</div>
						}
						else
						{
							<p>Không có tin tức</p>
						}


					</div>

				</div>
			@if (Model.Count > 3)
			{
				<div class="see-more-wrapper text-center mt-4">
					<button id="seeMoreBtn" class="btn btn-primary">Xem thêm</button>
				</div>
			}

			</div>

			<!-- Right Section: Featured News -->





			<script>
				function showAllNews() {
					document.getElementById('all-news').style.display = 'flex';
					document.getElementById('latest-news').style.display = 'none';
					document.getElementById('all-news-link').classList.add('selected');
					document.getElementById('latest-news-link').classList.remove('selected');
				document.getElementById('seeMoreBtn').classList.remove('hidden');

				}

				function showLatestNews() {
					document.getElementById('all-news').style.display = 'none';
					document.getElementById('latest-news').style.display = 'flex';
					document.getElementById('all-news-link').classList.remove('selected');
					document.getElementById('latest-news-link').classList.add('selected');
				document.getElementById('seeMoreBtn').classList.add('hidden');
				}

				$(document).ready(function () {
				$('#seeMoreBtn').on('click', function () {
					$('.hidden').slice(0, 3).removeClass('hidden');
					if ($('.hidden').length === 0) {
						$('#seeMoreBtn').hide();
					}
				});
			});
			</script>
		</div>
	</div>
}
</div>
