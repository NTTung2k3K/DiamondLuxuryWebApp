// <auto-generated />
using System;
using DiamondLuxurySolution.Data.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DiamondLuxurySolution.Data.Migrations
{
    [DbContext(typeof(LuxuryDiamondShopContext))]
    [Migration("20240521062053_InitDB")]
    partial class InitDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AspNetUserRole", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex(new[] { "RoleId" }, "IX_AspNetUserRoles_RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.About", b =>
                {
                    b.Property<int>("AboutId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AboutId"));

                    b.Property<string>("AboutImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AboutName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("AboutId")
                        .HasName("PK__Abouts__717FC93C4893C36F");

                    b.ToTable("Abouts");
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.AspNetRole", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "NormalizedName" }, "RoleNameIndex")
                        .IsUnique()
                        .HasFilter("([NormalizedName] IS NOT NULL)");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.AspNetRoleClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "RoleId" }, "IX_AspNetRoleClaims_RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.AspNetUser", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "NormalizedEmail" }, "EmailIndex");

                    b.HasIndex(new[] { "NormalizedUserName" }, "UserNameIndex")
                        .IsUnique()
                        .HasFilter("([NormalizedUserName] IS NOT NULL)");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.AspNetUserClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "UserId" }, "IX_AspNetUserClaims_UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.AspNetUserLogin", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex(new[] { "UserId" }, "IX_AspNetUserLogins_UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.AspNetUserToken", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.CampaignDetail", b =>
                {
                    b.Property<string>("OrderId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<Guid>("PromotionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("DiscountPercentage")
                        .HasColumnType("float");

                    b.Property<decimal>("FromAmount")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal>("MaxDiscount")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal>("ToAmount")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("OrderId", "PromotionId")
                        .HasName("PK__Campaign__26BC19331CE2CCBC");

                    b.HasIndex("PromotionId");

                    b.ToTable("CampaignDetail", (string)null);
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("CategoryType")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("CategoryId")
                        .HasName("PK__Categori__19093A0B0B6F138B");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.Collection", b =>
                {
                    b.Property<string>("CollectionId")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("CollectionName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Thumbnail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CollectionId")
                        .HasName("PK__Collecti__7DE6BC04F05F28C3");

                    b.ToTable("Collections");
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.Discount", b =>
                {
                    b.Property<Guid>("DiscountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("DiscountImage")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("DiscountName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<double>("PercentSale")
                        .HasColumnType("float");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime");

                    b.HasKey("DiscountId")
                        .HasName("PK__Discount__E43F6D964D50BE3B");

                    b.ToTable("Discounts");
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.Gem", b =>
                {
                    b.Property<Guid>("GemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<bool>("Fluoresence")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMain")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOrigin")
                        .HasColumnType("bit");

                    b.Property<string>("Polish")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal?>("Proportion")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("Symetry")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("_4c")
                        .HasColumnType("bit")
                        .HasColumnName("4C");

                    b.HasKey("GemId")
                        .HasName("PK__Gems__F101D5804FDDCABA");

                    b.ToTable("Gems");
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.GemPriceList", b =>
                {
                    b.Property<int>("GemPriceListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GemPriceListId"));

                    b.Property<string>("CaratWeight")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Clarity")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Cut")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("GemPriceListId")
                        .HasName("PK__GemPrice__EFF6BEE083204377");

                    b.ToTable("GemPriceLists");
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.GemPriceListDetail", b =>
                {
                    b.Property<Guid>("GemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("GemPriceListId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EffectDate")
                        .HasColumnType("datetime");

                    b.HasKey("GemId", "GemPriceListId")
                        .HasName("PK__GemPrice__EFFEBE6E32CA28A7");

                    b.HasIndex("GemPriceListId");

                    b.ToTable("GemPriceListDetails");
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.Image", b =>
                {
                    b.Property<int>("ImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ImageId"));

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductId")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.HasKey("ImageId")
                        .HasName("PK__Images__7516F70C3E996361");

                    b.HasIndex("ProductId");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.InspectionCertificate", b =>
                {
                    b.Property<string>("InspectionCertificateId")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<DateTime>("DateGrading")
                        .HasColumnType("datetime");

                    b.Property<string>("InspectionCertificateName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InspectionCertificateId")
                        .HasName("PK__Inspecti__23BDD56CAB56582C");

                    b.ToTable("InspectionCertificates");
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.KnowledgeNewCatagoriesDetail", b =>
                {
                    b.Property<int>("KnowledgeNewsId")
                        .HasColumnType("int")
                        .HasColumnName("KnowledgeNewsID");

                    b.Property<int>("KnowledgeNewCatagoryId")
                        .HasColumnType("int")
                        .HasColumnName("KnowledgeNewCatagoryID");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KnowledgeNewsId", "KnowledgeNewCatagoryId")
                        .HasName("PK__Knowledg__C25F12D4CF23B2A7");

                    b.HasIndex("KnowledgeNewCatagoryId");

                    b.ToTable("KnowledgeNewCatagoriesDetail", (string)null);
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.KnowledgeNewCatagory", b =>
                {
                    b.Property<int>("KnowledgeNewCatagoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("KnowledgeNewCatagoryID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KnowledgeNewCatagoryId"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KnowledgeNewCatagoriesName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("KnowledgeNewCatagoryId")
                        .HasName("PK__Knowledg__69B8D362765095E8");

                    b.ToTable("KnowledgeNewCatagories");
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.KnowledgeNews", b =>
                {
                    b.Property<int>("KnowledgeNewsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("KnowledgeNewsID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KnowledgeNewsId"));

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KnowledgeNewsName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Thumnail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("WriterId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("KnowledgeNewsId")
                        .HasName("PK__Knowledg__F4C49FE2953AEFFC");

                    b.HasIndex("WriterId");

                    b.ToTable("KnowledgeNews");
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.Material", b =>
                {
                    b.Property<Guid>("MaterialId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("MaterialName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("SubMaterial")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("MaterialId")
                        .HasName("PK__Material__C50610F7A4B8B8A5");

                    b.ToTable("Materials");
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.MaterialPriceList", b =>
                {
                    b.Property<int>("MaterialPriceListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaterialPriceListId"));

                    b.Property<decimal>("BuyPrice")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal>("SellPrice")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("MaterialPriceListId")
                        .HasName("PK__Material__2B355356E5A81769");

                    b.ToTable("MaterialPriceLists");
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.MaterialPriceListDetail", b =>
                {
                    b.Property<Guid>("MaterialId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("MaterialPriceListId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EffectDate")
                        .HasColumnType("datetime");

                    b.HasKey("MaterialId", "MaterialPriceListId")
                        .HasName("PK__Material__B7B545C2C6B38165");

                    b.HasIndex("MaterialPriceListId");

                    b.ToTable("MaterialPriceListDetails");
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.News", b =>
                {
                    b.Property<int>("NewsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NewsId"));

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsOutstanding")
                        .HasColumnType("bit");

                    b.Property<string>("NewName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("NewsId")
                        .HasName("PK__News__954EBDF39002B82C");

                    b.HasIndex("Id");

                    b.ToTable("News");
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.Order", b =>
                {
                    b.Property<string>("OrderId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<Guid?>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ShipAdress")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ShipEmail")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ShipName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ShipPhoneNumber")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<decimal>("ShipPrice")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<Guid?>("ShipperId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<decimal>("TotalAmout")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("Total_Amout");

                    b.HasKey("OrderId")
                        .HasName("PK__Orders__C3905BCF2AC66985");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ShipperId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.OrderDetail", b =>
                {
                    b.Property<string>("OrderId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("ProductId")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<Guid>("WarrantyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Discount")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("Total_Price");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("OrderId", "ProductId", "WarrantyId")
                        .HasName("PK__OrderDet__1AFE44BB57371514");

                    b.HasIndex("ProductId");

                    b.HasIndex("WarrantyId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.Payment", b =>
                {
                    b.Property<Guid>("PaymentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Message")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("OrderId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("PaymentTime")
                        .HasColumnType("datetime");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("PaymentId")
                        .HasName("PK__Payments__9B556A38A04DF308");

                    b.HasIndex("OrderId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.Platform", b =>
                {
                    b.Property<int>("PlatformId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlatformId"));

                    b.Property<string>("PlatformLogo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlatformName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("PlatformUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PlatformURL");

                    b.HasKey("PlatformId")
                        .HasName("PK__Platform__F559F6FABA63124D");

                    b.ToTable("Platforms");
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.Product", b =>
                {
                    b.Property<string>("ProductId")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("InspectionCertificateId")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<bool>("IsHome")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSale")
                        .HasColumnType("bit");

                    b.Property<decimal>("OriginalPrice")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int>("PercentSale")
                        .HasColumnType("int");

                    b.Property<decimal>("ProcessingPrice")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ProductThumbnail")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("SellingCount")
                        .HasColumnType("int");

                    b.Property<decimal>("SellingPrice")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("ProductId")
                        .HasName("PK__Products__B40CC6CDA1869B6D");

                    b.HasIndex("CategoryId");

                    b.HasIndex("InspectionCertificateId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.ProductsCollection", b =>
                {
                    b.Property<string>("CollectionId")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("ProductId")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("CollectionId", "ProductId")
                        .HasName("PK__Products__B6A6706821D3B801");

                    b.HasIndex("ProductId");

                    b.ToTable("Products_Collections", (string)null);
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.ProductsGem", b =>
                {
                    b.Property<Guid>("GemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProductId")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<decimal>("MainGemPrice")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal>("SubGemPrice")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("GemId", "ProductId")
                        .HasName("PK__Products__3A4119EC56C37C09");

                    b.HasIndex("ProductId");

                    b.ToTable("Products_Gems", (string)null);
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.ProductsMaterial", b =>
                {
                    b.Property<Guid>("MaterialId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProductId")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("MaterialId", "ProductId")
                        .HasName("PK__Products__0E46DC9BC0B1F4E3");

                    b.HasIndex("ProductId");

                    b.ToTable("Products_Materials", (string)null);
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.ProductsWareHouse", b =>
                {
                    b.Property<int>("WareHouseId")
                        .HasColumnType("int");

                    b.Property<string>("ProductId")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<int>("QuantityInStocks")
                        .HasColumnType("int")
                        .HasColumnName("Quantity_in_Stocks");

                    b.HasKey("WareHouseId", "ProductId")
                        .HasName("PK__Products__A2BF4C1407265BF9");

                    b.HasIndex("ProductId");

                    b.ToTable("Products_WareHouses", (string)null);
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.Promotion", b =>
                {
                    b.Property<Guid>("PromotionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<string>("PromotionImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PromotionName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime");

                    b.HasKey("PromotionId")
                        .HasName("PK__Promotio__52C42FCF3F8664C3");

                    b.ToTable("Promotions");
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.Slide", b =>
                {
                    b.Property<int>("SlideId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SlideId"));

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("SlideImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SlideName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("SlideUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SlideURL");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("SlideId")
                        .HasName("PK__Slides__9E7CB650F4EBAD0A");

                    b.ToTable("Slides");
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.WareHouse", b =>
                {
                    b.Property<int>("WareHouseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WareHouseId"));

                    b.Property<DateTime>("AcquisitionDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("WareHouseName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("WareHouseId")
                        .HasName("PK__WareHous__69FF807867312D67");

                    b.ToTable("WareHouses");
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.Warranty", b =>
                {
                    b.Property<Guid>("WarrantyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateActive")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateExpired")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("WarrantyName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("WarrantyId")
                        .HasName("PK__Warranty__2ED31813DFECD7DE");

                    b.ToTable("Warrantys");
                });

            modelBuilder.Entity("OrdersDiscount", b =>
                {
                    b.Property<string>("OrderId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<Guid>("DiscountId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("OrderId", "DiscountId")
                        .HasName("PK__Orders_D__BDD3AD1612975D9D");

                    b.HasIndex("DiscountId");

                    b.ToTable("Orders_Discounts", (string)null);
                });

            modelBuilder.Entity("AspNetUserRole", b =>
                {
                    b.HasOne("DiamondLuxurySolution.Data.Entities.AspNetRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DiamondLuxurySolution.Data.Entities.AspNetUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.AspNetRoleClaim", b =>
                {
                    b.HasOne("DiamondLuxurySolution.Data.Entities.AspNetRole", "Role")
                        .WithMany("AspNetRoleClaims")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.AspNetUserClaim", b =>
                {
                    b.HasOne("DiamondLuxurySolution.Data.Entities.AspNetUser", "User")
                        .WithMany("AspNetUserClaims")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.AspNetUserLogin", b =>
                {
                    b.HasOne("DiamondLuxurySolution.Data.Entities.AspNetUser", "User")
                        .WithMany("AspNetUserLogins")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.AspNetUserToken", b =>
                {
                    b.HasOne("DiamondLuxurySolution.Data.Entities.AspNetUser", "User")
                        .WithMany("AspNetUserTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.CampaignDetail", b =>
                {
                    b.HasOne("DiamondLuxurySolution.Data.Entities.Order", "Order")
                        .WithMany("CampaignDetails")
                        .HasForeignKey("OrderId")
                        .IsRequired()
                        .HasConstraintName("FK__CampaignD__Order__3864608B");

                    b.HasOne("DiamondLuxurySolution.Data.Entities.Promotion", "Promotion")
                        .WithMany("CampaignDetails")
                        .HasForeignKey("PromotionId")
                        .IsRequired()
                        .HasConstraintName("FK__CampaignD__Promo__37703C52");

                    b.Navigation("Order");

                    b.Navigation("Promotion");
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.GemPriceListDetail", b =>
                {
                    b.HasOne("DiamondLuxurySolution.Data.Entities.Gem", "Gem")
                        .WithMany("GemPriceListDetails")
                        .HasForeignKey("GemId")
                        .IsRequired()
                        .HasConstraintName("FK__GemPriceL__GemId__797309D9");

                    b.HasOne("DiamondLuxurySolution.Data.Entities.GemPriceList", "GemPriceList")
                        .WithMany("GemPriceListDetails")
                        .HasForeignKey("GemPriceListId")
                        .IsRequired()
                        .HasConstraintName("FK__GemPriceL__GemPr__7A672E12");

                    b.Navigation("Gem");

                    b.Navigation("GemPriceList");
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.Image", b =>
                {
                    b.HasOne("DiamondLuxurySolution.Data.Entities.Product", "Product")
                        .WithMany("Images")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK__Images__ProductI__04E4BC85");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.KnowledgeNewCatagoriesDetail", b =>
                {
                    b.HasOne("DiamondLuxurySolution.Data.Entities.KnowledgeNewCatagory", "KnowledgeNewCatagory")
                        .WithMany("KnowledgeNewCatagoriesDetails")
                        .HasForeignKey("KnowledgeNewCatagoryId")
                        .IsRequired()
                        .HasConstraintName("FK__Knowledge__Knowl__43D61337");

                    b.HasOne("DiamondLuxurySolution.Data.Entities.KnowledgeNews", "KnowledgeNews")
                        .WithMany("KnowledgeNewCatagoriesDetails")
                        .HasForeignKey("KnowledgeNewsId")
                        .IsRequired()
                        .HasConstraintName("FK__Knowledge__Knowl__42E1EEFE");

                    b.Navigation("KnowledgeNewCatagory");

                    b.Navigation("KnowledgeNews");
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.KnowledgeNews", b =>
                {
                    b.HasOne("DiamondLuxurySolution.Data.Entities.AspNetUser", "Writer")
                        .WithMany("KnowledgeNews")
                        .HasForeignKey("WriterId")
                        .HasConstraintName("FK__Knowledge__Write__40058253");

                    b.Navigation("Writer");
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.MaterialPriceListDetail", b =>
                {
                    b.HasOne("DiamondLuxurySolution.Data.Entities.Material", "Material")
                        .WithMany("MaterialPriceListDetails")
                        .HasForeignKey("MaterialId")
                        .IsRequired()
                        .HasConstraintName("FK__MaterialP__Mater__1AD3FDA4");

                    b.HasOne("DiamondLuxurySolution.Data.Entities.MaterialPriceList", "MaterialPriceList")
                        .WithMany("MaterialPriceListDetails")
                        .HasForeignKey("MaterialPriceListId")
                        .IsRequired()
                        .HasConstraintName("FK__MaterialP__Mater__1BC821DD");

                    b.Navigation("Material");

                    b.Navigation("MaterialPriceList");
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.News", b =>
                {
                    b.HasOne("DiamondLuxurySolution.Data.Entities.AspNetUser", "IdNavigation")
                        .WithMany("News")
                        .HasForeignKey("Id")
                        .HasConstraintName("FK__News__Id__3B40CD36");

                    b.Navigation("IdNavigation");
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.Order", b =>
                {
                    b.HasOne("DiamondLuxurySolution.Data.Entities.AspNetUser", "Customer")
                        .WithMany("OrderCustomers")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK__Orders__Customer__236943A5");

                    b.HasOne("DiamondLuxurySolution.Data.Entities.AspNetUser", "Shipper")
                        .WithMany("OrderShippers")
                        .HasForeignKey("ShipperId")
                        .HasConstraintName("FK__Orders__ShipperI__22751F6C");

                    b.Navigation("Customer");

                    b.Navigation("Shipper");
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.OrderDetail", b =>
                {
                    b.HasOne("DiamondLuxurySolution.Data.Entities.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .IsRequired()
                        .HasConstraintName("FK__OrderDeta__Order__29221CFB");

                    b.HasOne("DiamondLuxurySolution.Data.Entities.Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK__OrderDeta__Produ__282DF8C2");

                    b.HasOne("DiamondLuxurySolution.Data.Entities.Warranty", "Warranty")
                        .WithMany("OrderDetails")
                        .HasForeignKey("WarrantyId")
                        .IsRequired()
                        .HasConstraintName("FK__OrderDeta__Warra__2A164134");

                    b.Navigation("Order");

                    b.Navigation("Product");

                    b.Navigation("Warranty");
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.Payment", b =>
                {
                    b.HasOne("DiamondLuxurySolution.Data.Entities.Order", "Order")
                        .WithMany("Payments")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("FK__Payments__OrderI__2CF2ADDF");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.Product", b =>
                {
                    b.HasOne("DiamondLuxurySolution.Data.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK__Products__Catego__01142BA1");

                    b.HasOne("DiamondLuxurySolution.Data.Entities.InspectionCertificate", "InspectionCertificate")
                        .WithMany("Products")
                        .HasForeignKey("InspectionCertificateId")
                        .HasConstraintName("FK__Products__Inspec__02084FDA");

                    b.Navigation("Category");

                    b.Navigation("InspectionCertificate");
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.ProductsCollection", b =>
                {
                    b.HasOne("DiamondLuxurySolution.Data.Entities.Collection", "Collection")
                        .WithMany("ProductsCollections")
                        .HasForeignKey("CollectionId")
                        .IsRequired()
                        .HasConstraintName("FK__Products___Colle__0D7A0286");

                    b.HasOne("DiamondLuxurySolution.Data.Entities.Product", "Product")
                        .WithMany("ProductsCollections")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK__Products___Produ__0E6E26BF");

                    b.Navigation("Collection");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.ProductsGem", b =>
                {
                    b.HasOne("DiamondLuxurySolution.Data.Entities.Gem", "Gem")
                        .WithMany("ProductsGems")
                        .HasForeignKey("GemId")
                        .IsRequired()
                        .HasConstraintName("FK__Products___GemId__07C12930");

                    b.HasOne("DiamondLuxurySolution.Data.Entities.Product", "Product")
                        .WithMany("ProductsGems")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK__Products___Produ__08B54D69");

                    b.Navigation("Gem");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.ProductsMaterial", b =>
                {
                    b.HasOne("DiamondLuxurySolution.Data.Entities.Material", "Material")
                        .WithMany("ProductsMaterials")
                        .HasForeignKey("MaterialId")
                        .IsRequired()
                        .HasConstraintName("FK__Products___Mater__1EA48E88");

                    b.HasOne("DiamondLuxurySolution.Data.Entities.Product", "Product")
                        .WithMany("ProductsMaterials")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK__Products___Produ__1F98B2C1");

                    b.Navigation("Material");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.ProductsWareHouse", b =>
                {
                    b.HasOne("DiamondLuxurySolution.Data.Entities.Product", "Product")
                        .WithMany("ProductsWareHouses")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK__Products___Produ__14270015");

                    b.HasOne("DiamondLuxurySolution.Data.Entities.WareHouse", "WareHouse")
                        .WithMany("ProductsWareHouses")
                        .HasForeignKey("WareHouseId")
                        .IsRequired()
                        .HasConstraintName("FK__Products___WareH__1332DBDC");

                    b.Navigation("Product");

                    b.Navigation("WareHouse");
                });

            modelBuilder.Entity("OrdersDiscount", b =>
                {
                    b.HasOne("DiamondLuxurySolution.Data.Entities.Discount", null)
                        .WithMany()
                        .HasForeignKey("DiscountId")
                        .IsRequired()
                        .HasConstraintName("FK__Orders_Di__Disco__31B762FC");

                    b.HasOne("DiamondLuxurySolution.Data.Entities.Order", null)
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .IsRequired()
                        .HasConstraintName("FK__Orders_Di__Order__32AB8735");
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.AspNetRole", b =>
                {
                    b.Navigation("AspNetRoleClaims");
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.AspNetUser", b =>
                {
                    b.Navigation("AspNetUserClaims");

                    b.Navigation("AspNetUserLogins");

                    b.Navigation("AspNetUserTokens");

                    b.Navigation("KnowledgeNews");

                    b.Navigation("News");

                    b.Navigation("OrderCustomers");

                    b.Navigation("OrderShippers");
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.Collection", b =>
                {
                    b.Navigation("ProductsCollections");
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.Gem", b =>
                {
                    b.Navigation("GemPriceListDetails");

                    b.Navigation("ProductsGems");
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.GemPriceList", b =>
                {
                    b.Navigation("GemPriceListDetails");
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.InspectionCertificate", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.KnowledgeNewCatagory", b =>
                {
                    b.Navigation("KnowledgeNewCatagoriesDetails");
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.KnowledgeNews", b =>
                {
                    b.Navigation("KnowledgeNewCatagoriesDetails");
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.Material", b =>
                {
                    b.Navigation("MaterialPriceListDetails");

                    b.Navigation("ProductsMaterials");
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.MaterialPriceList", b =>
                {
                    b.Navigation("MaterialPriceListDetails");
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.Order", b =>
                {
                    b.Navigation("CampaignDetails");

                    b.Navigation("OrderDetails");

                    b.Navigation("Payments");
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.Product", b =>
                {
                    b.Navigation("Images");

                    b.Navigation("OrderDetails");

                    b.Navigation("ProductsCollections");

                    b.Navigation("ProductsGems");

                    b.Navigation("ProductsMaterials");

                    b.Navigation("ProductsWareHouses");
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.Promotion", b =>
                {
                    b.Navigation("CampaignDetails");
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.WareHouse", b =>
                {
                    b.Navigation("ProductsWareHouses");
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.Warranty", b =>
                {
                    b.Navigation("OrderDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
