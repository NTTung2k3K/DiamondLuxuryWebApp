// <auto-generated />
using System;
using DiamondLuxurySolution.Data.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DiamondLuxurySolution.Data.Migrations
{
    [DbContext(typeof(LuxuryDiamondShopContext))]
    partial class LuxuryDiamondShopContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.About", b =>
                {
                    b.Property<int>("AboutId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AboutId"));

                    b.Property<string>("AboutImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AboutName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("AboutId");

                    b.ToTable("Abouts", (string)null);
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.AppRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CitizenIDCard")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Dob")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Firstname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fullname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastChangePasswordTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Lastname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

<<<<<<< HEAD
=======
                    b.Property<int?>("Point")
                        .HasColumnType("int");

>>>>>>> 01676ae888fd0b156da97ddb3c9c3d22000700ed
                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.CampaignDetail", b =>
                {
                    b.Property<string>("OrderId")
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid>("PromotionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("DiscountPercentage")
                        .HasColumnType("float");

                    b.Property<decimal>("FromAmount")
                        .HasColumnType("DECIMAL(10, 2)");

                    b.Property<decimal>("MaxDiscount")
                        .HasColumnType("DECIMAL(10, 2)");

                    b.Property<decimal>("ToAmount")
                        .HasColumnType("DECIMAL(10, 2)");

                    b.HasKey("OrderId", "PromotionId");

                    b.HasIndex("PromotionId");

                    b.ToTable("CampaignDetail", (string)null);
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<decimal>("CategoryPriceProcessing")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CategoryType")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories", (string)null);
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.Collection", b =>
                {
                    b.Property<string>("CollectionId")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("CollectionName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Thumbnail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CollectionId");

                    b.ToTable("Collections", (string)null);
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.Discount", b =>
                {
                    b.Property<Guid>("DiscountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("DiscountName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<double>("PercentSale")
                        .HasColumnType("float");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("DiscountId");

                    b.ToTable("Discounts", (string)null);
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.Gem", b =>
                {
                    b.Property<Guid>("GemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AcquisitionDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<bool>("Fluoresence")
                        .HasColumnType("bit");

                    b.Property<string>("GemName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsMain")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOrigin")
                        .HasColumnType("bit");

                    b.Property<string>("Polish")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("ProportionImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Symetry")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("GemId");

                    b.ToTable("Gems", (string)null);
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.GemPriceList", b =>
                {
                    b.Property<int>("GemPriceListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GemPriceListId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CaratWeight")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Clarity")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Cut")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<Guid>("GemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<DateTime>("effectDate")
                        .HasColumnType("datetime2");

                    b.HasKey("GemPriceListId");

                    b.HasIndex("GemId");

                    b.ToTable("GemPriceLists", (string)null);
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.Image", b =>
                {
                    b.Property<int>("ImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ImageId"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductId")
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("ImageId");

                    b.HasIndex("ProductId");

                    b.ToTable("Images", (string)null);
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.InspectionCertificate", b =>
                {
                    b.Property<string>("InspectionCertificateId")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime>("DateGrading")
                        .HasColumnType("datetime2");

                    b.Property<string>("InspectionCertificateName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("InspectionCertificateId");

                    b.ToTable("InspectionCertificates", (string)null);
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.KnowledgeNewCatagoriesDetail", b =>
                {
                    b.Property<int>("KnowledgeNewsId")
                        .HasColumnType("int");

                    b.Property<int>("KnowledgeNewCatagoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KnowledgeNewsId", "KnowledgeNewCatagoryId");

                    b.HasIndex("KnowledgeNewCatagoryId");

                    b.ToTable("KnowledgeNewCatagoriesDetail", (string)null);
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.KnowledgeNewCatagory", b =>
                {
                    b.Property<int>("KnowledgeNewCatagoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KnowledgeNewCatagoryId"));

                    b.Property<string>("Description")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KnowledgeNewCatagoriesName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("KnowledgeNewCatagoryId");

                    b.ToTable("KnowledgeNewCatagories", (string)null);
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.KnowledgeNews", b =>
                {
                    b.Property<int>("KnowledgeNewsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KnowledgeNewsId"));

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KnowledgeNewsName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Thumnail")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("WriterId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("KnowledgeNewsId");

                    b.HasIndex("WriterId");

                    b.ToTable("KnowledgeNews", (string)null);
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.Material", b =>
                {
                    b.Property<Guid>("MaterialId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaterialName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("MaterialId");

                    b.ToTable("Materials", (string)null);
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.MaterialPriceList", b =>
                {
                    b.Property<int>("MaterialPriceListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaterialPriceListId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<decimal>("BuyPrice")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<Guid>("MaterialId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("SellPrice")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<DateTime>("effectDate")
                        .HasColumnType("datetime2");

                    b.HasKey("MaterialPriceListId");

                    b.HasIndex("MaterialId");

                    b.ToTable("MaterialPriceLists", (string)null);
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.News", b =>
                {
                    b.Property<int>("NewsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NewsId"));

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Id")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Image")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsOutstanding")
                        .IsRequired()
                        .HasColumnType("bit");

                    b.Property<string>("NewName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("NewsId");

                    b.HasIndex("Id");

                    b.ToTable("News", (string)null);
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.Order", b =>
                {
                    b.Property<string>("OrderId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid?>("CustomerId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DiscountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShipAdress")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ShipEmail")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ShipName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ShipPhoneNumber")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<decimal>("ShipPrice")
                        .HasColumnType("DECIMAL(10, 2)");

                    b.Property<Guid?>("ShipperId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalAmout")
                        .HasColumnType("DECIMAL(10, 2)");

                    b.HasKey("OrderId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("DiscountId");

                    b.HasIndex("ShipperId");

                    b.ToTable("Orders", (string)null);
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.OrderDetail", b =>
                {
                    b.Property<string>("OrderId")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ProductId")
                        .HasColumnType("nvarchar(15)");

                    b.Property<Guid>("WarrantyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Discount")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("DECIMAL(10, 2)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("DECIMAL(10, 2)");

                    b.HasKey("OrderId", "ProductId", "WarrantyId");

                    b.HasIndex("ProductId");

                    b.HasIndex("WarrantyId");

                    b.ToTable("OrderDetails", (string)null);
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.Payment", b =>
                {
                    b.Property<Guid>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Message")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("OrderId")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("PaymentTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("PaymentId");

                    b.HasIndex("OrderId");

                    b.ToTable("Payments", (string)null);
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.Platform", b =>
                {
                    b.Property<int>("PlatformId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlatformId"));

                    b.Property<string>("PlatformLogo")
<<<<<<< HEAD
                        .IsRequired()
=======
>>>>>>> 01676ae888fd0b156da97ddb3c9c3d22000700ed
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlatformName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("PlatformUrl")
<<<<<<< HEAD
                        .IsRequired()
=======
>>>>>>> 01676ae888fd0b156da97ddb3c9c3d22000700ed
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("PlatformId");

                    b.ToTable("Platforms", (string)null);
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.Product", b =>
                {
                    b.Property<string>("ProductId")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InspectionCertificateId")
                        .HasColumnType("nvarchar(15)");

                    b.Property<bool>("IsHome")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSale")
                        .HasColumnType("bit");

                    b.Property<Guid>("MaterialId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("OriginalPrice")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int>("PercentSale")
                        .HasColumnType("int");

                    b.Property<decimal>("ProcessingPrice")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ProductThumbnail")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("SellingCount")
                        .HasColumnType("int");

                    b.Property<decimal>("SellingPrice")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("InspectionCertificateId");

                    b.HasIndex("MaterialId");

                    b.ToTable("Products", (string)null);
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.ProductsCollection", b =>
                {
                    b.Property<string>("CollectionId")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ProductId")
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("CollectionId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("Products_Collections", (string)null);
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.ProductsGem", b =>
                {
                    b.Property<Guid>("GemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProductId")
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("MainGemQuantity")
                        .HasColumnType("int");

                    b.Property<int>("SubGemQuantity")
                        .HasColumnType("int");

                    b.HasKey("GemId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("Products_Gems", (string)null);
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.ProductsWareHouse", b =>
                {
                    b.Property<int>("WareHouseId")
                        .HasColumnType("int");

                    b.Property<string>("ProductId")
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("QuantityInStocks")
                        .HasColumnType("int");

                    b.HasKey("WareHouseId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductsWareHouses", (string)null);
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.Promotion", b =>
                {
                    b.Property<Guid>("PromotionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PromotionImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PromotionName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("PromotionId");

                    b.ToTable("Promotions", (string)null);
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.Slide", b =>
                {
                    b.Property<int>("SlideId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SlideId"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SlideImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SlideName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("SlideUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("SlideId");

                    b.ToTable("Slides", (string)null);
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.WareHouse", b =>
                {
                    b.Property<int>("WareHouseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WareHouseId"));

<<<<<<< HEAD
                    b.Property<DateTime>("AcquisitionDate")
                        .HasColumnType("datetime2");

=======
>>>>>>> 01676ae888fd0b156da97ddb3c9c3d22000700ed
                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("WareHouseName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("WareHouseId");

                    b.ToTable("WareHouses", (string)null);
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.Warranty", b =>
                {
                    b.Property<Guid>("WarrantyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateActive")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateExpired")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("WarrantyName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("WarrantyId");

                    b.ToTable("Warrantys", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.CampaignDetail", b =>
                {
                    b.HasOne("DiamondLuxurySolution.Data.Entities.Order", "Order")
                        .WithMany("CampaignDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DiamondLuxurySolution.Data.Entities.Promotion", "Promotion")
                        .WithMany("CampaignDetails")
                        .HasForeignKey("PromotionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Promotion");
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.GemPriceList", b =>
                {
                    b.HasOne("DiamondLuxurySolution.Data.Entities.Gem", "Gem")
                        .WithMany("GemPriceLists")
                        .HasForeignKey("GemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gem");
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.Image", b =>
                {
                    b.HasOne("DiamondLuxurySolution.Data.Entities.Product", "Product")
                        .WithMany("Images")
                        .HasForeignKey("ProductId");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.KnowledgeNewCatagoriesDetail", b =>
                {
                    b.HasOne("DiamondLuxurySolution.Data.Entities.KnowledgeNewCatagory", "KnowledgeNewCatagory")
                        .WithMany("KnowledgeNewCatagoriesDetails")
                        .HasForeignKey("KnowledgeNewCatagoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DiamondLuxurySolution.Data.Entities.KnowledgeNews", "KnowledgeNews")
                        .WithMany("KnowledgeNewCatagoriesDetails")
                        .HasForeignKey("KnowledgeNewsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KnowledgeNewCatagory");

                    b.Navigation("KnowledgeNews");
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.KnowledgeNews", b =>
                {
                    b.HasOne("DiamondLuxurySolution.Data.Entities.AppUser", "Writer")
                        .WithMany("KnowledgeNews")
                        .HasForeignKey("WriterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Writer");
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.MaterialPriceList", b =>
                {
                    b.HasOne("DiamondLuxurySolution.Data.Entities.Material", "Material")
                        .WithMany("MaterialPriceLists")
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Material");
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.News", b =>
                {
                    b.HasOne("DiamondLuxurySolution.Data.Entities.AppUser", "Writer")
                        .WithMany("News")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Writer");
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.Order", b =>
                {
                    b.HasOne("DiamondLuxurySolution.Data.Entities.AppUser", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DiamondLuxurySolution.Data.Entities.Discount", "Discount")
                        .WithMany("Orders")
                        .HasForeignKey("DiscountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DiamondLuxurySolution.Data.Entities.AppUser", "Shipper")
                        .WithMany()
                        .HasForeignKey("ShipperId");

                    b.Navigation("Customer");

                    b.Navigation("Discount");

                    b.Navigation("Shipper");
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.OrderDetail", b =>
                {
                    b.HasOne("DiamondLuxurySolution.Data.Entities.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DiamondLuxurySolution.Data.Entities.Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DiamondLuxurySolution.Data.Entities.Warranty", "Warranty")
                        .WithMany("OrderDetails")
                        .HasForeignKey("WarrantyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");

                    b.Navigation("Warranty");
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.Payment", b =>
                {
                    b.HasOne("DiamondLuxurySolution.Data.Entities.Order", "Order")
                        .WithMany("Payments")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.Product", b =>
                {
                    b.HasOne("DiamondLuxurySolution.Data.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId");

                    b.HasOne("DiamondLuxurySolution.Data.Entities.InspectionCertificate", "InspectionCertificate")
                        .WithMany("Products")
                        .HasForeignKey("InspectionCertificateId");

                    b.HasOne("DiamondLuxurySolution.Data.Entities.Material", "Material")
                        .WithMany("Products")
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("InspectionCertificate");

                    b.Navigation("Material");
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.ProductsCollection", b =>
                {
                    b.HasOne("DiamondLuxurySolution.Data.Entities.Collection", "Collection")
                        .WithMany("ProductsCollections")
                        .HasForeignKey("CollectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DiamondLuxurySolution.Data.Entities.Product", "Product")
                        .WithMany("ProductsCollections")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Collection");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.ProductsGem", b =>
                {
                    b.HasOne("DiamondLuxurySolution.Data.Entities.Gem", "Gem")
                        .WithMany("ProductsGems")
                        .HasForeignKey("GemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DiamondLuxurySolution.Data.Entities.Product", "Product")
                        .WithMany("ProductsGems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Gem");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.ProductsWareHouse", b =>
                {
                    b.HasOne("DiamondLuxurySolution.Data.Entities.Product", "Product")
                        .WithMany("ProductsWareHouses")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DiamondLuxurySolution.Data.Entities.WareHouse", "WareHouse")
                        .WithMany("ProductsWareHouses")
                        .HasForeignKey("WareHouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("WareHouse");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("DiamondLuxurySolution.Data.Entities.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("DiamondLuxurySolution.Data.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("DiamondLuxurySolution.Data.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("DiamondLuxurySolution.Data.Entities.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DiamondLuxurySolution.Data.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("DiamondLuxurySolution.Data.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.AppUser", b =>
                {
                    b.Navigation("KnowledgeNews");

                    b.Navigation("News");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.Collection", b =>
                {
                    b.Navigation("ProductsCollections");
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.Discount", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.Gem", b =>
                {
                    b.Navigation("GemPriceLists");

                    b.Navigation("ProductsGems");
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.InspectionCertificate", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.KnowledgeNewCatagory", b =>
                {
                    b.Navigation("KnowledgeNewCatagoriesDetails");
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.KnowledgeNews", b =>
                {
                    b.Navigation("KnowledgeNewCatagoriesDetails");
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.Material", b =>
                {
                    b.Navigation("MaterialPriceLists");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.Order", b =>
                {
                    b.Navigation("CampaignDetails");

                    b.Navigation("OrderDetails");

                    b.Navigation("Payments");
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.Product", b =>
                {
                    b.Navigation("Images");

                    b.Navigation("OrderDetails");

                    b.Navigation("ProductsCollections");

                    b.Navigation("ProductsGems");

                    b.Navigation("ProductsWareHouses");
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.Promotion", b =>
                {
                    b.Navigation("CampaignDetails");
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.WareHouse", b =>
                {
                    b.Navigation("ProductsWareHouses");
                });

            modelBuilder.Entity("DiamondLuxurySolution.Data.Entities.Warranty", b =>
                {
                    b.Navigation("OrderDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
