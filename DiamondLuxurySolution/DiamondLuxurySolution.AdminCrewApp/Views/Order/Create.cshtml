@model DiamondLuxurySolution.ViewModel.Models.Order.CreateOrderByStaffRequest

@{
    ViewData["Title"] = "Tạo mới tin tức";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<h1>Tạo mới tin tức</h1>
<hr />
<div class="row">
    <div class="col-md-9">
        @if (ViewBag.Errors != null)
        {
            foreach (var error in ViewBag.Errors)
            {
                <h6 class="text-danger">@error</h6>
            }
        }

        <form asp-action="Create" id="submitFormFormatFinal" asp-controller="Order" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group m-2">
                <label asp-for="Fullname" class="control-label m-2">Tên người mua</label>
                <input asp-for="Fullname" class="form-control" />
                <span asp-validation-for="Fullname" class="text-danger"></span>
            </div>
            <div class="form-group m-2">
                <label asp-for="PhoneNumber" class="control-label m-2">Số điện thoại</label>
                <input asp-for="PhoneNumber" class="form-control" />
                <span asp-validation-for="PhoneNumber" class="text-danger"></span>
            </div>
            <div class="form-group m-2">
                <label asp-for="Email" class="control-label m-2">Email</label>
                <input asp-for="Email" class="form-control" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
            <div class="form-group m-2">
                <label asp-for="ShipAdress" class="control-label m-2"></label>
                <input asp-for="ShipAdress" class="form-control" />
                <span asp-validation-for="ShipAdress" class="text-danger"></span>
            </div>
            
            <div class="form-group m-2">
                <label asp-for="Status" class="m-2 control-label">Trạng thái</label>
                <!--Start dropdown list-->
                @if (Model != null)
                {
                    <select class="m-2 h-50" name="Status">
                        @foreach (var item in ViewBag.ListStatus)
                        {
                            bool isSelected = Model != null && Model.Status.ToString().Equals(item.ToString());
                            string selectedAttribute = isSelected ? "selected=\"selected\"" : "";

                            if (item.ToString().Equals(DiamondLuxurySolution.Utilities.Constants.Systemconstant.OrderStatus.Canceled.ToString()))
                            {
                                <!option value="@item" @selectedAttribute >
                                Hủy đơn
                                </!option>
                            }
                            else if (item.ToString().Equals(DiamondLuxurySolution.Utilities.Constants.Systemconstant.OrderStatus.Confirmed.ToString()))
                            {
                                <!option value="@item" @selectedAttribute >
                                Đã xác nhận
                                </!option>
                            }
                            else if (item.ToString().Equals(DiamondLuxurySolution.Utilities.Constants.Systemconstant.OrderStatus.Deposit.ToString()))
                            {
                                <!option value="@item" @selectedAttribute>
                                Đặt cọc
                                </!option>
                            }
                            else if (item.ToString().Equals(DiamondLuxurySolution.Utilities.Constants.Systemconstant.OrderStatus.InProgress.ToString()))
                            {
                                <!option value="@item" @selectedAttribute>
                                Đang chờ xử lý
                                </!option>
                            }
                            else if (item.ToString().Equals(DiamondLuxurySolution.Utilities.Constants.Systemconstant.OrderStatus.ProcessOfPayment.ToString()))
                            {
                                <!option value="@item" @selectedAttribute>
                                Trong quá trình thanh toán
                                </!option>
                            }
                            else if (item.ToString().Equals(DiamondLuxurySolution.Utilities.Constants.Systemconstant.OrderStatus.Shipping.ToString()))
                            {
                                <!option value="@item" @selectedAttribute>
                                Đang vận chuyển
                                </!option>
                            }
                            else if (item.ToString().Equals(DiamondLuxurySolution.Utilities.Constants.Systemconstant.OrderStatus.Success.ToString()))
                            {
                                <!option value="@item" @selectedAttribute>
                                Thành công
                                </!option>
                            }
                            else
                            {
                                <!option value="@item" @selectedAttribute>
                                N/A
                                </!option>
                            }
                        }
                    </select>



                }
                else
                {
                    <select class="m-2 h-50" name="Status">
                        @foreach (var item in ViewBag.ListStatus)
                        {

                            if (item.ToString().Equals(DiamondLuxurySolution.Utilities.Constants.Systemconstant.OrderStatus.Canceled.ToString()))
                            {
                                <!option value="@item"  >
                                Hủy đơn
                                </!option>
                            }
                            else if (item.ToString().Equals(DiamondLuxurySolution.Utilities.Constants.Systemconstant.OrderStatus.Confirmed.ToString()))
                            {
                                <!option value="@item"  >
                                Đã xác nhận
                                </!option>
                            }
                            else if (item.ToString().Equals(DiamondLuxurySolution.Utilities.Constants.Systemconstant.OrderStatus.Deposit.ToString()))
                            {
                                <!option value="@item" >
                                Đặt cọc
                                </!option>
                            }
                            else if (item.ToString().Equals(DiamondLuxurySolution.Utilities.Constants.Systemconstant.OrderStatus.InProgress.ToString()))
                            {
                                <!option value="@item" >
                                Đang chờ xử lý
                                </!option>
                            }
                            else if (item.ToString().Equals(DiamondLuxurySolution.Utilities.Constants.Systemconstant.OrderStatus.ProcessOfPayment.ToString()))
                            {
                                <!option value="@item" >
                                Trong quá trình thanh toán
                                </!option>
                            }
                            else if (item.ToString().Equals(DiamondLuxurySolution.Utilities.Constants.Systemconstant.OrderStatus.Shipping.ToString()))
                            {
                                <!option value="@item" >
                                Đang vận chuyển
                                </!option>
                            }
                            else if (item.ToString().Equals(DiamondLuxurySolution.Utilities.Constants.Systemconstant.OrderStatus.Success.ToString()))
                            {
                                <!option value="@item" >
                                Thành công
                                </!option>
                            }
                            else
                            {
                                <!option value="@item" >
                                N/A
                                </!option>
                            }
                        }
                    </select>
                }

                <!--Promotion-->
                <div class="form-group m-2">
                    <label asp-for="PromotionId" class="control-label m-2">Chương trình khuyến mãi hiện có</label>
                    <select class="h-50 " name="PromotionId">
                        @if (ViewBag.ListPromotionOnTime != null && ViewBag.ListPromotionOnTime.Count > 0)
                        {
                            @foreach (var promotion in ViewBag.ListPromotionOnTime)
                            {
                                if (Model != null && Model.PromotionId != null)
                                {
                                    if (Model.PromotionId.ToString().Equals(promotion.PromotionId.ToString()))
                                    {
                                        <option value="@promotion.PromotionId" selected>
                                            <div>
                                                Tên: @promotion.PromotionName &nbsp; Bắt đầu: @promotion.StartDate, Kết thúc: @promotion.EndDate; Giảm tối đa: @promotion.MaxDiscount.ToString("N0")₫
                                            </div>
                                        </option>
                                    }
                                    else
                                    {
                                        <option value="@promotion.PromotionId">
                                            <div>
                                                Tên: @promotion.PromotionName &nbsp; Bắt đầu: @promotion.StartDate, Kết thúc: @promotion.EndDate; Giảm tối đa: @promotion.MaxDiscount.ToString("N0")₫
                                            </div>
                                        </option>
                                    }
                                }
                                else
                                {
                                    <option value="@promotion.PromotionId">
                                        <div>
                                            Tên: @promotion.PromotionName &nbsp; Bắt đầu: @promotion.StartDate, Kết thúc: @promotion.EndDate; Giảm tối đa: @promotion.MaxDiscount.ToString("N0")₫
                                        </div>
                                    </option>
                                }
                            }
                        }
                        else
                        {
                            <option disabled>Không có</option>
                        }



                    </select>
                    <br />
                    <span asp-validation-for="PromotionId" class="text-danger"></span>
                </div>



                @*Product here*@
                <div class="container mt-5">
                    <div class="col-12">
                        <h5 class="d-flex justify-content-center mt-3">Sản phẩm</h5>
                        <div class="table-responsive">
                            <table id="itemTable" class="table table-hover mb-0">
                                <thead>
                                    <tr>
                                        <th>#</th>
                                        <th><span class="text-danger">*</span>Tên</th>
                                        <th><span class="text-danger">*</span>Số lượng</th>
                                        <th>Ni (size)</th>

                                        <th class="text-center">Hành động</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <!-- Khởi tạo tbody trống -->
                                </tbody>
                            </table>
                        </div>
                        <div class="d-flex justify-content-center mt-3">
                            <hr class="mb-4 mt-0 border-secondary border-opacity-50">
                            <button id="addItemBtn" type="button" class="btn btn-light-primary d-flex align-items-center gap-2"><i class="ti ti-plus"></i> Thêm</button>
                        </div>
                    </div>
                </div>


                @*Product end*@

                <div class="form-group m-2">
                    <label class="control-label m-2">Tổng cộng tạm tính: <span id="total" style="color: red">0₫</span></label>
                </div>
                @if (Model == null)
                {

                    <div class="form-group m-2">
                        <label asp-for="Deposit" class="control-label m-2"></label>
                        <input asp-for="Deposit" id="Deposit" type="text" value="0" class="PriceFormatFinal form-control" />
                    </div>
                }
                else
                {

                    <div class="form-group m-2">
                        <label asp-for="Deposit" class="control-label m-2"></label>
                        <input asp-for="Deposit" id="Deposit" type="text" class="PriceFormatFinal form-control" />
                    </div>
                }


                <div class="form-group m-2">
                    <label asp-for="ListPaymentId" class="control-label m-2">Hình thức thanh toán</label>
                    <select class="h-50 " name="ListPaymentId">
                        @if (ViewBag.ListPayment != null && ViewBag.ListPayment.Count > 0)
                        {
                            @foreach (var payment in ViewBag.ListPayment)
                            {
                                if (Model != null && Model.ListPaymentId != null)
                                {
                                    if (Model.ListPaymentId.ElementAt(0).ToString().Equals(payment.PaymentId.ToString()))
                                    {
                                        <option value="@payment.PaymentId" selected>
                                            <div>
                                                 @payment.PaymentMethod &nbsp
                                            </div>
                                        </option>
                                    }
                                    else
                                    {
                                        <option value="@payment.PaymentId">
                                            <div>
                                                @payment.PaymentMethod &nbsp
                                            </div>
                                        </option>
                                    }
                                }
                                else
                                {
                                    <option value="@payment.PaymentId">
                                        <div>
                                            @payment.PaymentMethod &nbsp
                                        </div>
                                    </option>
                                }
                            }


                        }

                        else
                        {
                            <option>Không có</option>
                        }



                    </select>

                    <div class="form-group ">
                        <label asp-for="ListPaymentId" class="control-label m-2">Trạng thái giao dịch</label>
                        <select name="TransactionStatus">
                            @foreach (var trans in ViewBag.TransactionStatus)
                            {
                                if (Model != null && trans.ToString().Equals(Model.TransactionStatus.ToString()))
                                {
                                    <option selected value="@trans">

                                        @if (trans.ToString().Equals(DiamondLuxurySolution.Utilities.Constants.Systemconstant.TransactionStatus.Success.ToString()))
                                        {
                                            <span>Thành công</span>
                                        }
                                        else if (trans.ToString().Equals(DiamondLuxurySolution.Utilities.Constants.Systemconstant.TransactionStatus.Waiting.ToString()))
                                        {
                                            <span>Đang chờ</span>
                                        }
                                        else if (trans.ToString().Equals(DiamondLuxurySolution.Utilities.Constants.Systemconstant.TransactionStatus.Failed.ToString()))
                                        {
                                            <span>Thất bại</span>
                                        }
                                    </option>
                                }
                                else
                                {
                                    <option value="@trans">
                                        @if (trans.ToString().Equals(DiamondLuxurySolution.Utilities.Constants.Systemconstant.TransactionStatus.Success.ToString()))
                                        {
                                            <span>Thành công</span>
                                        }
                                        else if (trans.ToString().Equals(DiamondLuxurySolution.Utilities.Constants.Systemconstant.TransactionStatus.Waiting.ToString()))
                                        {
                                            <span>Đang chờ</span>
                                        }
                                        else if (trans.ToString().Equals(DiamondLuxurySolution.Utilities.Constants.Systemconstant.TransactionStatus.Failed.ToString()))
                                        {
                                            <span>Thất bại</span>
                                        }
                                    </option>
                                }
                            }
                        </select>
                    </div>
                    <br />
                </div>


                <div class="form-group m-2">
                    <label asp-for="Description" class="control-label m-2"></label>
                    <input asp-for="Description" class="form-control" />
                </div>

                <div class="form-group row">
                    <div class="col-md-5">
                        <input type="submit" value="Tạo mới" class="btn btn-success" />
                    </div>
                    <div class="col-md-7">
                        <a class="m-6 btn btn-secondary" asp-action="Index" asp-controller="Order">Về trang quản lí đơn hàng</a>
                    </div>
                </div>
        </form>

    </div>
</div>

<!-- Add this HTML somewhere in your body -->
<div id="sizeModal" class="modal">
    <div class="modal-content">
        <span class="close">&times;</span>
        <div class="size-grid">
            <button class="size-button">4</button>
            <button class="size-button">5</button>
            <button class="size-button">6</button>
            <button class="size-button">7</button>
            <button class="size-button">8</button>
            <button class="size-button">9</button>
            <button class="size-button">10</button>
            <button class="size-button">11</button>
            <button class="size-button">12</button>
            <button class="size-button">13</button>
            <button class="size-button">14</button>
            <button class="size-button">15</button>
            <button class="size-button">16</button>
            <button class="size-button">17</button>
            <button class="size-button">18</button>
            <button class="size-button">19</button>
            <button class="size-button">20</button>
            <button class="size-button">21</button>
            <button class="size-button">22</button>
            <button class="size-button">23</button>
            <button class="size-button">24</button>
            <button class="size-button">25</button>
            <button class="size-button">26</button>
            <button class="size-button">27</button>
            <button class="size-button">28</button>
            <button class="size-button">29</button>
            <button class="size-button">30</button>
            <button class="size-button">31</button>
            <button class="size-button">32</button>
        </div>
    </div>
</div>


@{
    var fullSubgemJson = Json.Serialize(ViewBag.ListProduct);
}
@section CssStyle {

    <style>
        .modal {
            display: none;
            position: fixed;
            z-index: 1000000;
            padding-top: 100px;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            overflow: auto;
            background-color: rgb(0,0,0);
            background-color: rgba(0,0,0,0.4);
        }

        .modal-content {
            background-color: #fefefe;
            margin: auto;
            padding: 20px;
            border: 1px solid #888;
            width: 80%;
        }

        .close {
            color: #aaa;
            float: right;
            font-size: 28px;
            font-weight: bold;
        }

            .close:hover,
            .close:focus {
                color: black;
                text-decoration: none;
                cursor: pointer;
            }

        .size-grid {
            display: grid;
            grid-template-columns: repeat(4, 1fr);
            gap: 10px;
        }

        .size-button {
            padding: 10px;
            font-size: 18px;
            cursor: pointer;
        }
    </style>
}


@section Scripts {
    <script src="~/assets/js/plugins/dropzone-amd-module.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script>
        $(document).ready(function () {
            var index = 0; // Start index for name attributes
            var selectedOptions = []; // Array to hold selected options
            var fullSubgem = @Html.Raw(fullSubgemJson); // Convert ViewBag data to a JavaScript array
            var controlSelectNumber = 0;
            // Function to update the state of the add button
            debugger;
            
            // Event handler when an option is selected
            $(document).on('change', '.select-subgem', function () {
                var selectedOption = $(this).val();
                if (selectedOption) {
                    selectedOptions.push(selectedOption); // Add the option to selectedOptions array
                }
            });
            function calculateTotal() {
                var total = 0;
                $('#itemTable tbody tr').each(function () {
                    var row = $(this);
                    var quantity = row.find('input').val();
                    var select = row.find('.select-subgem');
                    var selectedOption = select.find('option:selected');
                    var sellingPrice = selectedOption.data('price');

                    if (!isNaN(quantity) && quantity.length !== 0 && !isNaN(sellingPrice)) {
                        total += parseInt(quantity) * parseFloat(sellingPrice);
                    }
                });

                var formattedTotal = total.toLocaleString('en-US', { minimumFractionDigits: 0, maximumFractionDigits: 0 });
                $('#total').text(formattedTotal+"₫");


            }


            // Function to create a new row
            function createNewRow() {
                return `<tr>
                                                    <td></td>
                                                    <td>
                                                                        <select class="h-50 select-subgem" name="ListOrderProduct[${index}].ProductId" >
                                                        </select>
                                                    </td>

                                                            <td><input type="number" value="1" class="form-control" name="ListOrderProduct[${index}].Quantity" placeholder="Số lượng" /></td>
                                                                             <td><input type="text" readonly class="form-control size-input" name="ListOrderProduct[${index}].Size" placeholder="Chọn size" /></td>
                                                    <td class="text-center">
                                                        <a href="#" class="avtar avtar-s btn-link-danger btn-pc-default delete-item"><i class="ti ti-trash f-20"></i></a>
                                                    </td>
                                                </tr>`;
            }

            // Add new row when the add button is clicked
            $('#addItemBtn').on('click', function () {
                controlSelectNumber++;
                $('#itemTable tbody').append(createNewRow());
                index++;
                createOptions(); // Generate new options for the select dropdown
                updateIndex(); // Update indices after a row is added
                calculateTotal();
            });

            // Delete row when the delete button is clicked
            $(document).on('click', '.delete-item', function (event) {
                event.preventDefault(); // Prevent the default link behavior

                var select = $(this).closest('tr').find('.select-subgem');
                var selectedOption = select.val();

                if (selectedOption) {
                    var optionIndex = selectedOptions.indexOf(selectedOption);
                    if (optionIndex !== -1) {
                        selectedOptions.splice(optionIndex, 1); // Remove the option from selectedOptions array
                    }
                }

                controlSelectNumber--;
                $(this).closest('tr').remove();
                updateIndex(); // Update indices after a row is removed
                createOptions(); // Refresh the dropdown options
                calculateTotal();
            });

            // Function to create options for the select dropdown
            function createOptions() {
                $('#itemTable tbody tr').each(function () {
                    var rowSelect = $(this).find('.select-subgem'); // Select the current row's select element
                    var selectedOption = rowSelect.val(); // Get the current selected option
                    rowSelect.empty(); // Clear previous options

                    if (Array.isArray(fullSubgem) && fullSubgem.length > 0) {
                        fullSubgem.forEach(function (subgem) {
                            var formattedPrice = subgem.sellingPrice.toLocaleString('en-US', {
                                minimumFractionDigits: 0,
                                maximumFractionDigits: 2
                            });
                                var option = $('<option/>');
                                option.val(subgem.productId);
                            option.text('Tên: ' + subgem.productName + ' | Giá: ' + formattedPrice + '₫' + ' | Số lượng còn: ' + subgem.quantity);
                                option.addClass('optionOfSubGem');
                                option.data('price', subgem.sellingPrice);
                                rowSelect.append(option);

                        });
                    } else {
                        console.error('Dữ liệu từ ViewBag.FullSubgem không hợp lệ.');
                    }

                    if (selectedOption) {
                        rowSelect.val(selectedOption); // Restore the previous selection
                    }
                });
            }
            $(document).on('input', 'input[name^="ListOrderProduct"][name$="Quantity"]', function () {
                calculateTotal(); // Recalculate total when quantity input changes
            });
            // Event handler when an option is selected
            $(document).on('change', '.select-subgem', function () {
                var selectedOption = $(this).val();
                if (selectedOption) {
                    selectedOptions.push(selectedOption); // Add the option to selectedOptions array
                    updateAddButtonState(); // Update the add button state
                }
                calculateTotal(); // Update total price
            });


            function showSizeModal(sizeInput) {
                currentSizeInput = sizeInput;
                $('#sizeModal').show();
            }
            $(document).on('focus', '.size-input', function () {
                showSizeModal(this);
            });

            $('.size-button').on('click', function () {
                if (currentSizeInput) {
                    $(currentSizeInput).val($(this).text());
                    $('#sizeModal').hide();
                    calculateTotal();
                }
            });

            $('.close').on('click', function () {
                $('#sizeModal').hide();
            });

            // Update the indices and names after adding or removing rows
            function updateIndex() {
                $('#itemTable tbody tr').each(function (i, row) {
                    $(row).find('td:first').text(i + 1);
                    $(row).find('.select-subgem').attr('name', `ListOrderProduct[${i}].ProductId`);
                    $(row).find('input[name$=".Quantity"]').attr('name', `ListOrderProduct[${i}].Quantity`);
                    $(row).find('input[name$=".Size"]').attr('name', `ListOrderProduct[${i}].Size`);
                });

               
            }

            // Initial setup
            createOptions();
        });

    </script>

            <script>
        document.addEventListener("DOMContentLoaded", function() {
            const input = document.querySelector("#Deposit");

            input.addEventListener("input", function (e) {
                let value = e.target.value;

                // Xóa bỏ các ký tự không phải là số
                value = value.replace(/[^0-9]/g, "");

                // Giới hạn tối đa 17 ký tự số
                if (value.length > 16) {
                    value = value.slice(0, 16);
                }

                // Nếu giá trị không rỗng, định dạng lại theo kiểu chuỗi Việt Nam
                if (value) {
                    e.target.value = new Intl.NumberFormat('vi-VN').format(parseInt(value));
                } else {
                    e.target.value = "";
                }
            });
        });
    </script>

}
