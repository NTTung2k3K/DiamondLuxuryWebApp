@using DiamondLuxurySolution.ViewModel.Models.User.Staff
@model DiamondLuxurySolution.ViewModel.Models.Order.OrderVm

@{
    ViewData["Title"] = "Detail";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@{
    var staffVm = StaffSessionHelper.GetObjectFromJson<StaffVm>("Staff");
}
<div class="row">
    <h1 class="col-md-9">Chi tiết đơn hàng</h1>
    <div class="col-md-3 ">
        @if (staffVm.ListRoleName.Contains(DiamondLuxurySolution.Utilities.Constants.Systemconstant.UserRoleDefault.SalesStaff))
        {
            if (!Model.Status.ToString().Equals(DiamondLuxurySolution.Utilities.Constants.Systemconstant.OrderStatus.Success.ToString()))
            {
                <button class="btn btn-success" id="acceptOrder">Phụ trách đơn hàng</button>
            }
        }
        <input type="hidden" value="@staffVm.StaffId" id="StaffId" />
    </div>
</div>
@if (ViewBag.Errors != null)
{
    foreach (var error in ViewBag.Errors)
    {
        <h6 class="text-danger">@error</h6>
    }
}
@if (Model != null)
{
    <div>
        <hr />
        <dl class="row">
            <dt class="col-sm-3">
                Mã đơn hàng
            </dt>
            <dd class="col-sm-9">
                @Html.DisplayFor(model => model.OrderId)
            </dd>
            <dt class="col-sm-3">
                Nhân viên phụ trách
            </dt>
            <dd class="col-sm-9">
                <p>
                    @(Model.StaffVm == null ? "Không có" : Model.StaffVm.FullName)
                </p>
            </dd>
            <dt class="col-sm-3">
                Lần chỉnh sửa đơn hàng gần đây
            </dt>
            <dd class="col-sm-9">
                @Html.DisplayFor(model => model.Datemodified)
            </dd>
            <dt class="col-sm-3">
                Người đặt
            </dt>
            <dd class="col-sm-9">
                @Html.DisplayFor(model => model.ShipName)
            </dd>
            <dt class="col-sm-3">
                Số điện thoại
            </dt>
            <dd class="col-sm-9">
                @Html.DisplayFor(model => model.ShipPhoneNumber)
            </dd>
            <dt class="col-sm-3">
                Email
            </dt>
            <dd class="col-sm-9">
                @Html.DisplayFor(model => model.ShipEmail)
            </dd>

            <dt class="col-sm-3">
                Địa chỉ giao hàng
            </dt>
            <dd class="col-sm-9">
                @if (Model.ShipAdress != null)
                {
                    <div>
                        <p>
                            @Html.DisplayFor(model => model.ShipAdress)
                        </p>
                    </div>
                }
                else
                {
                    <p>Không có</p>
                }
            </dd>
            <dt class="col-sm-3">
                Mô tả
            </dt>
            <dd class="col-sm-9">
                @if (Model.Description != null)
                {
                    <div>
                        <p>
                            @Html.DisplayFor(model => model.Description)
                        </p>
                    </div>
                }
                else
                {
                    <p>Không có</p>
                }
            </dd>

            <dt class="col-sm-3">
                Trạng thái
            </dt>
            <dd class="col-sm-9">
                @if (Model.Status.ToString().Equals(DiamondLuxurySolution.Utilities.Constants.Systemconstant.OrderStatus.Canceled.ToString()))
                {
                    <p value="@Model.Status" style="color:red">
                        Hủy đơn
                    </p>
                }
                else if (Model.Status.ToString().Equals(DiamondLuxurySolution.Utilities.Constants.Systemconstant.OrderStatus.Confirmed.ToString()))
                {
                    <p value="@Model.Status" style="color:pink">
                        Đã xác nhận
                    </p>
                }
                else if (Model.Status.ToString().Equals(DiamondLuxurySolution.Utilities.Constants.Systemconstant.OrderStatus.Deposit.ToString()))
                {
                    <p value="@Model.Status" style="color:bisque">
                        Đặt cọc
                    </p>
                }
                else if (Model.Status.ToString().Equals(DiamondLuxurySolution.Utilities.Constants.Systemconstant.OrderStatus.InProgress.ToString()))
                {
                    <p value="@Model.Status" style="color:cadetblue">
                        Đang chờ xử lý
                    </p>
                }
                else if (Model.Status.ToString().Equals(DiamondLuxurySolution.Utilities.Constants.Systemconstant.OrderStatus.ProcessOfPayment.ToString()))
                {
                    <p value="@Model.Status" style="color:blueviolet">
                        Trong quá trình thanh toán
                    </p>
                }
                else if (Model.Status.ToString().Equals(DiamondLuxurySolution.Utilities.Constants.Systemconstant.OrderStatus.Shipping.ToString()))
                {
                    <p value="@Model.Status" style="color:cornflowerblue">
                        Đang vận chuyển
                    </p>
                }
                else if (Model.Status.ToString().Equals(DiamondLuxurySolution.Utilities.Constants.Systemconstant.OrderStatus.Success.ToString()))
                {
                    <p value="@Model.Status" style="color:green">
                        Thành công
                    </p>
                }
                else
                {
                    <p value="@Model.Status">
                        N/A
                    </p>
                }

            </dd>

            <dt class="col-sm-3">
                Chương trình khuyến mãi
            </dt>
            <dd class="col-sm-9">
                @if (Model.PromotionVm != null)
                {
                    <div>
                        <span style="color:forestgreen">
                            @Html.DisplayFor(model => model.PromotionVm.PromotionName)
                        </span>

                        <span>
                            <span>Từ ngày</span>
                            @Html.DisplayFor(model => model.PromotionVm.StartDate)
                        </span>

                        <span>
                            <span>Đến ngày</span>
                            @Html.DisplayFor(model => model.PromotionVm.EndDate)
                        </span>
                    </div>
                }
                else
                {
                    <p>Không có</p>
                }
            </dd>



            <dt class="col-sm-3">
                Mã giảm giá
            </dt>
            <dd class="col-sm-9">
                @if (Model.DiscountVm != null)
                {
                    <div>
                        <p>
                            @Html.DisplayFor(model => model.DiscountVm.DiscountName)
                        </p>
                    </div>
                }
                else
                {
                    <p>Không có</p>
                }
            </dd>
            <dt class="col-sm-3">
                Sản phẩm
            </dt>
            <dd class="col-sm-9">
                @if (Model.ListOrderProduct != null)
                {
                    foreach (var product in Model.ListOrderProduct)
                    {
                        <p>
                            @product.ProductName &nbsp; Giá: @product.UnitPrice.ToString("N0")₫ &nbsp; Số lượng @product.Quantity &nbsp; Ni: @(product.Size != null ? product.Size : "Không có")
                        </p>
                    }
                }
                else
                {
                    <p>Không có</p>
                }
            </dd>

            <dt class="col-sm-3">
                Tổng cổng (chưa giảm)
            </dt>
            <dd class="col-sm-9">
                @(((decimal)Model.TotalSale + (decimal)Model.TotalAmount).ToString("N0"))₫
            </dd>

            <dt class="col-sm-3">
                Số tiền giảm
            </dt>
            <dd class="col-sm-9">
                @if (Model.TotalSale != null && Model.TotalSale != 0)
                {
                    <p>
                        @Model.TotalSale?.ToString("N0")₫
                    </p>

                }
                else
                {
                    <span>0₫</span>
                }
            </dd>
            <dt class="col-sm-3">
                Tổng cộng
            </dt>
            <dd class="col-sm-9" style="color:red">
                <p>
                    @Model.TotalAmount.ToString("N0")₫
                </p>
            </dd>

            <dt class="col-sm-3">
                Trả trước
            </dt>
            <dd class="col-sm-9">
                <p>
                    @Model.Deposit?.ToString("N0")₫
                </p>
            </dd>

            <dt class="col-sm-3">
                Còn lại
            </dt>
            <dd class="col-sm-9">
                <p>
                    @Model.RemainAmount.ToString("N0")₫
                </p>
            </dd>

            <dt class="col-sm-3">
                Số lần thanh toán
            </dt>
            <dd class="col-sm-9">
                @if (Model.OrdersPaymentVm != null)
                {
                    foreach (var payment in Model.OrdersPaymentVm)
                    {
                        <p style="font-weight:bold">Thời gian: @payment.PaymentTime</p>
                        <p>
                            &nbsp;&nbsp; &nbsp;&nbsp; - Phương thức: @payment.PaymentMethod &nbsp;  &nbsp; Số tiền: @payment.PaymentAmount.ToString("N0")₫ &nbsp; Lời nhắn: @(string.IsNullOrWhiteSpace(payment.Message) ? payment.Message : "Không có")  &nbsp; Trạng thái: @if (payment.Status.ToString().Equals(DiamondLuxurySolution.Utilities.Constants.Systemconstant.TransactionStatus.Success.ToString()))
                            {
                                <span style="color:green">Thành công</span>
                            }
                            else if (payment.Status.ToString().Equals(DiamondLuxurySolution.Utilities.Constants.Systemconstant.TransactionStatus.Waiting.ToString()))
                            {
                                <span style="color:#e8be6f">Đang chờ</span>
                            }
                            else if (payment.Status.ToString().Equals(DiamondLuxurySolution.Utilities.Constants.Systemconstant.TransactionStatus.Failed.ToString()))
                            {
                                <span style="color:red">Thất bại</span>
                            }
                        </p>
                    }
                }
                else
                {
                    <p>Không có</p>
                }
            </dd>

            <dt class="col-sm-3">
                Giao hàng
            </dt>
            <dd class="col-sm-9">
                <div class="form-check form-switch ">
                    <input class="form-check-input f-18 ml-3" type="checkbox" value="@Model.IsShip" disabled />
                </div>
            </dd>
            <dt class="col-sm-3">
                Nhân viên giao hàng
            </dt>
            <dd class="col-sm-9" id="shipperName">
                @if (Model.ShiperVm != null)
                {
                    @Html.DisplayFor(model => model.ShiperVm.FullName)
                }
                else
                {
                    <p>Không có</p>
                }
            </dd>
        </dl>
    </div>

    var staffVmSession = StaffSessionHelper.GetObjectFromJson<StaffVm>("Staff");

    @if (staffVmSession.ListRoleName.Contains(DiamondLuxurySolution.Utilities.Constants.Systemconstant.UserRoleDefault.SalesStaff))
    {
        <div class="row">
            @if (!Model.Status.ToString().Equals(DiamondLuxurySolution.Utilities.Constants.Systemconstant.OrderStatus.Success.ToString()))
            {
                <div class="col-md-3">
                    @Html.ActionLink("Chỉnh sửa", "Edit", new { OrderId = Model.OrderId }, new { @class = "btn btn-warning" })
                </div>
            }
            else
            {
                <div class="col-md-3"></div>

                    }
            @if (Model != null && Model.RemainAmount > 0 && !Model.Status.ToString().Equals(DiamondLuxurySolution.Utilities.Constants.Systemconstant.OrderStatus.Success.ToString()))
            {
                <div class="col-md-3">
                    @Html.ActionLink("Tiếp tục thanh toán", "PaidTheRest", new { OrderId = Model.OrderId }, new { @class = "btn btn-info" })
                </div>
            }
            @if (!string.IsNullOrEmpty(Model.ShipAdress) && !Model.Status.ToString().Equals(DiamondLuxurySolution.Utilities.Constants.Systemconstant.OrderStatus.Success.ToString()))
            {
                <div class="col-md-3 ">
                    <button class="btn btn-primary" id="UpdateShipperBtn">Cập nhật nhân viên giao hàng</button>
                </div>
            }
            @if (Model != null && !Model.Status.ToString().Equals(DiamondLuxurySolution.Utilities.Constants.Systemconstant.OrderStatus.InProgress.ToString()) && !Model.Status.ToString().Equals(DiamondLuxurySolution.Utilities.Constants.Systemconstant.OrderStatus.Canceled.ToString()))
            {
                <div class="col-md-3">
                    <button id="selectFolderButton" data-order-id="@Model.OrderId" class="btn btn-secondary">Xuất Phiếu Bảo Hành <br /> & Giấy Chứng Nhận</button>
                </div>
            }

            <div class="col-md-3">
                <a class="m-6 btn btn-secondary" asp-action="Index" asp-controller="Order">Về trang quản lí đơn hàng</a>
            </div>
        </div>
    }
    else
    {
        <div class="row">
            <div class="col-md-9">
            </div>
            <div class="col-md-3">
                <a class="m-6 btn btn-secondary" asp-action="Index" asp-controller="Order">Về trang quản lí đơn hàng</a>
            </div>
        </div>
    }

}
else
{
    <div>
        <a class="m-6 btn btn-secondary" asp-action="Index" asp-controller="Order">Về trang quản lí đơn hàng</a>
    </div>
}

@section Scripts {

    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script>
        $(document).ready(function () {
            $("#UpdateShipperBtn").on('click', function () {
                var orderId = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.OrderId));
                var requestData = {
                    OrderId: orderId
                };
                $(this).html('<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Đang cập nhật...').prop('disabled', true);

                $.ajax({
                    url: "https://localhost:9000/api/Orders/UpdateShipper",
                    type: "PUT",
                    contentType: 'application/json',
                    data: JSON.stringify(requestData),
                    success: function (response) {

                        if (response.isSuccessed) {
                            alert('Cập nhật thành công: ' + response.resultObj);
                            $("#shipperName").text(response.resultObj);
                            // Handle success scenario
                            // Xóa hiệu ứng loading và kích hoạt lại nút
                            $("#UpdateShipperBtn").html('Cập nhật nhân viên giao hàng').prop('disabled', false);

                        } else {
                            alert('Cập nhật thất bại: ' + response.message);
                            // Handle failure scenario
                            // Xóa hiệu ứng loading và kích hoạt lại nút
                            $("#UpdateShipperBtn").html('Cập nhật nhân viên giao hàng').prop('disabled', false);

                        }
                    },
                    error: function (xhr, status, error) {
                        console.log(error);
                        alert('Có lỗi xảy ra trong quá trình gửi yêu cầu.');
                        // Handle other errors
                        // Xóa hiệu ứng loading và kích hoạt lại nút
                        $("#UpdateShipperBtn").html('Cập nhật nhân viên giao hàng').prop('disabled', false);

                    }
                })
            })

            $("#acceptOrder").on('click', function () {
                var orderId = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.OrderId));
                var staffId = $('#StaffId').val();

                var requestData = {
                    OrderId: orderId,
                    StaffId: staffId
                };
                $(this).html('<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Đang cập nhật...').prop('disabled', true);

                debugger;
                $.ajax({
                    url: "https://localhost:9000/api/Orders/AcceptProcessOrder",
                    type: "PUT",
                    contentType: 'application/json',
                    data: JSON.stringify(requestData),
                    success: function (response) {

                        if (response.isSuccessed) {
                            alert('Phụ trách đơn hàng thành công');
                            window.location.reload();
                            // Handle success scenario
                            $("#acceptOrder").html('Phụ trách đơn hàng').prop('disabled', false);
                        } else {
                            alert('Cập nhật thất bại: ' + response.message);
                            // Handle failure scenario
                            $("#acceptOrder").html('Phụ trách đơn hàng').prop('disabled', false);

                        }
                    },
                    error: function (xhr, status, error) {
                        console.log(error);
                        alert('Có lỗi xảy ra trong quá trình gửi yêu cầu.');
                        // Handle other errors
                        $("#acceptOrder").html('Phụ trách đơn hàng').prop('disabled', false);

                    }
                })
            })


        });


    </script>
    <script>
        $(document).ready(function () {
            $('#selectFolderButton').on('click', async function () {
                const orderId = $(this).data('order-id'); // Retrieve the order ID from the button's data attribute
                debugger;
                $(this).html('<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Đang cập nhật...').prop('disabled', true);

                saveFolderPath(orderId);
            });


            function saveFolderPath(orderId) {
                const url = "https://localhost:9000/api/Orders/ExportFileToFolder"; // Adjust the URL to your action

                var requestData = {
                    OrderId: orderId,
                };

                debugger;
                $.ajax({
                    url: url,
                    type: 'PUT', // Use 'POST' if that's what your action expects
                    contentType: 'application/json',
                    data: JSON.stringify(requestData),
                    success: function (response) {
                        debugger;
                        alert(`File đã lưu vào ổ C: \\DiamondInfo\\` + response.resultObj);
                        $("#selectFolderButton").html('Xuất Phiếu Bảo Hành  <br>  & Giấy Chứng Nhận ').prop('disabled', false);
                    },
                    error: function (xhr, status, error) {
                        console.error('Lỗi:', error);
                        alert('Có lỗi xảy ra vui lòng thử lại');
                        $("#selectFolderButton").html('Xuất Phiếu Bảo Hành  <br>  & Giấy Chứng Nhận ').prop('disabled', false);
                    }

                });
            }
        });
    </script>
}